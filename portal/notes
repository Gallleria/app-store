TO SEED DATA USE FOLLOWING COMMANDS
=data -build-file /=portal=/sur/portal/data/hoon
=lib -build-file /=portal=/lib/portal/hoon

=pikachu :*
title='Pikachu'
link='https://bulbapedia.bulbagarden.net/wiki/Pikachu_(Pok%C3%A9mon)'
description='This is a cool interesting description.'
tags=~['tag1' 'tag2' 'tag3']
properties=*(map @t @t)
pictures=~['https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og_smaller.png' 'https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og.png']
image='https://archives.bulbagarden.net/media/upload/4/4a/0025Pikachu.png'
color='#e8e8e8'
==

=arbok :*
title='Arbok'
link='https://bulbapedia.bulbagarden.net/wiki/Arbok_(Pok%C3%A9mon)'
description='This is a description.'
tags=~['tag1' 'tag2' 'tag3']
properties=*(map @t @t)
pictures=~['https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og_smaller.png' 'https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og.png']
image='https://bulbapedia.bulbagarden.net/wiki/File:0024Arbok.png'
color='#e8e8e8'
==

=feraligatr :*
title='Feraligatr'
link='https://bulbapedia.bulbagarden.net/wiki/Feraligatr_(Pok%C3%A9mon)'
description='This is a description.'
tags=~['tag1' 'tag2' 'tag3']
properties=*(map @t @t)
pictures=~['https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og_smaller.png' 'https://toptyr-bilder.nyc3.cdn.digitaloceanspaces.com/mona_og.png']
image='https://bulbapedia.bulbagarden.net/wiki/File:0160Feraligatr.png'
color='#e8e8e8'
==


:portal-manager|add [our [%enditem %other ~] pikachu [%enditem-other ~]]
:portal-manager|add [our [%enditem %other ~] arbok [%enditem-other ~]]
:portal-manager|add [our [%enditem %other ~] feraligatr [%enditem-other ~]]
:portal-manager|add [our [%enditem %app ~] pikachu [%enditem-app '~nec/portal']]
:portal-manager|add [our [%enditem %app ~] arbok [%enditem-app '~nec/portal']]
:portal-manager|add [our [%enditem %app ~] feraligatr [%enditem-app '~nec/portal']]

:portal-manager|overwrite-list [[our [%list %nonitem %group ~] '~2000.1.1'] ~[[~dalten [%nonitem %group ~] 'aera'] [~hocwyn-tipwex [%nonitem %group ~] 'uqbar-event-horizon'] [~dilryd-mopreg [%nonitem %group ~] 'app-store']]]
:portal-manager|overwrite-list [[our [%list %nonitem %ship ~] '~2000.1.1'] ~[[~toptyr-bilder [%nonitem %ship ~] ''] [~doplyr-harbur [%nonitem %ship ~] ''] [~dilryd-mopreg [%nonitem %ship ~] '']]]



SCRIES from dojo
.^(item:data %gx /=portal-store=/item/~zod/list/list/~2000.1.1/item)
.^(key-set:data %gx /=portal-store=/all/keys/key-set)
.^(nested-all-items:conv:lib %gx /=portal-store=/all/nested/nested-all-items)
.^(all-items:conv:lib %gx /=portal-store=/all/items/all-items)
.^(? %gx /=portal-store=/valid/latest/~zod/list/list/~2000.1.1/noun)

TODO
- add groups to groups list, ships to ship list, better other item data, better app item data (e.g. a few commands for few different apps/other)
-general code cleanup
- different seed data?

ASSERTIONS/SPECIFIC TYPES
- how to add a default/bunt value in the data type? (we should add it for color, see where else. where for bespoke?)




TODO LATER
 - purges on a daily/weekly basis or sth
 - TODO printove popravit u portal storeu/manageru i u libu da da kazu title a ne samo pointer
   tj da budu i na vise mjesta di trebaju bit (pomoc ce za debugging kad ljudi krenu koristit)
 - make cards from portal.hoon, and almost dont use any from portal-manager/portal-store explicitly
   or is that less clear? or more clear?
- validation is only for apps

SCRYS/SUBS
- vidjet dii ih sve zovem i vidjet kad crashaju. handleat crashove bolje? jel se mogu handleat?
( to ukljucuje sve !! i sve ?> i ?<)

ERROR HANDLING?
 - what happens if scries fail? (look where they are all used)
 - make sre you dont !!, but return sth like ~
 - find all !!, and make it not crash but handle it

_____

::  is it worth using path format of the pointer everywhere instead of the cell?

::but it'd be useful to get all the ships someone follows, and from there, get all the items from those ships

::  FAQ za data types

::  TODO  annotate code everywhere with comments

::  should bespoke-read only read bespoke-data?
::  or should it be able to interpret the whole item based on its type?
::  whole item is better
::++  bespoke-read
::  |=  [=item]
::  ^-  what should it output???
::

::  how to separate type layer
::  SECURITY  ??

::  - a default peer which we monitor to see the growth of the size and number items, and if we should do sth

::  POINTER parsing rules:
::
::    if =(points-to-item %.n)
::  %app  ->  (weld (weld (scow %p ship) "/") (trip title))  ->  ~zod/app-name
::  %group  ->  (weld (weld (scow %p ship) "/") (trip title))  ->  ~zod/group-name
::  %ship  ->  ship  ->  ~zodÅ¾
::  depending on type, q has different meaning
::
::    if =(points-to-item %.y)
::  you can find any item in the global portal namespace with the pointer
::  (assuming right permissions)
::  q means time created-at
::
::
::  ITEM parsing rules:
::
::    if =(type %app)
::  link  ->  distributor desk
::  pictures  ->  screenshots
::  reviews  ->  hash should be compared to hash.docket.bespoke-data
::  name  ->  should be same as in desk


::  (is necessary?)curator can only add apps with valid sigs to app list (whether its %curator-page or %list)?
::  curator can only put apps which are properly validated into another list? (or that doesnt matter and it should be validated locally by any person)

::  item versioning?

::  auto item update (dev-server subbed to dst-server)??


Whatever you add is auto added to your collection (cur=dev)?

how to follow a curator? (e.g. you can find their default %curated easily just by their @p because you know it's '~2000.1.1'

version control such that curator recommends a specific version of it
curator should unrecommend something if it updates?

Curator subs to dev's cur page (change name), receives a list of his items from which he can choose what he puts on his on cur page

extra command for practicality: add pointer to list-of-pointers when you want (so it's like edit item, but specific to the item type)
- in different situations, e.g. auto add a pointer, for all received data for example

specificna mapa/lista itema koji su prikazani? (ako zelis neki hopping algo u buducnosti mozemo)

eventually we want to add "price" property to items.
